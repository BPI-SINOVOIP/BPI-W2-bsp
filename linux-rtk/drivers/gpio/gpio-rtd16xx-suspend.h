/*
 * rtd16xx_gpio_suspend.h - gpio suspend driver
 *
 * Copyright (c) 2017 Realtek Semiconductor Corp.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 and
 * only version 2 as published by the Free Software Foundation.
 */

#ifndef RTD16XX_GPIO_SUSPEND_H_
#define RTD16XX_GPIO_SUSPEND_H_

#include <soc/realtek/rtk_pm.h>

#define SETMASK(bits, pos) (((-1U) >> (32-bits)) << (pos))
#define CLRMASK(bits, pos) (~(SETMASK(bits, pos)))
#define SET_VAL(val,bits,pos) ((val << pos) & SETMASK(bits, pos))
#define GET_VAL(reg,bits,pos) ((reg & SETMASK(bits, pos)) >> pos)

#define GPIO_WAKEUP_EN_SHIFFT 0
#define GPIO_WAKEUP_EN_BITS	 32
#define GPIO_WAKEUP_EN_MASK(val) SET_VAL(val, GPIO_WAKEUP_EN_BITS, GPIO_WAKEUP_EN_SHIFFT)
#define GPIO_WAKEUP_EN_GET(reg) GET_VAL(reg, GPIO_WAKEUP_EN_BITS, GPIO_WAKEUP_EN_SHIFFT)

#define GPIO_WAKEUP_ACT_SHIFFT 0
#define GPIO_WAKEUP_ACT_BITS 32
#define GPIO_WAKEUP_ACT_MASK(val) SET_VAL(val, GPIO_WAKEUP_ACT_BITS, GPIO_WAKEUP_ACT_SHIFFT)
#define GPIO_WAKEUP_ACT_GET(reg) GET_VAL(reg, GPIO_WAKEUP_ACT_BITS, GPIO_WAKEUP_ACT_SHIFFT)

#define GPIO_OUTPUT_CHANGE_EN_SHIFFT 0
#define GPIO_OUTPUT_CHANGE_EN_BITS 32
#define GPIO_OUTPUT_CHANGE_EN_MASK(val) SET_VAL(val, GPIO_OUTPUT_CHANGE_EN_BITS, GPIO_OUTPUT_CHANGE_EN_SHIFFT)
#define GPIO_OUTPUT_CHANGE_EN_GET(reg) GET_VAL(reg, GPIO_OUTPUT_CHANGE_EN_BITS, GPIO_OUTPUT_CHANGE_EN_SHIFFT)

#define GPIO_OUTPUT_CHANGE_ACT_SHIFFT 0
#define GPIO_OUTPUT_CHANGE_ACT_BITS 32
#define GPIO_OUTPUT_CHANGE_ACT_MASK(val) SET_VAL(val, GPIO_OUTPUT_CHANGE_ACT_BITS, GPIO_OUTPUT_CHANGE_ACT_SHIFFT)
#define GPIO_OUTPUT_CHANGE_ACT_GET(reg) GET_VAL(reg, GPIO_OUTPUT_CHANGE_ACT_BITS, GPIO_OUTPUT_CHANGE_ACT_SHIFFT)

#define GPIO_WAKEUP_EN2_SHIFFT 0
#define GPIO_WAKEUP_EN2_BITS 32
#define GPIO_WAKEUP_EN2_MASK(val) SET_VAL(val, GPIO_WAKEUP_EN2_BITS, GPIO_WAKEUP_EN2_SHIFFT)
#define GPIO_WAKEUP_EN2_GET(reg) GET_VAL(reg, GPIO_WAKEUP_EN2_BITS, GPIO_WAKEUP_EN2_SHIFFT)

#define GPIO_WAKEUP_ACT2_SHIFFT 0
#define GPIO_WAKEUP_ACT2_BITS 32
#define GPIO_WAKEUP_ACT2_MASK(val) SET_VAL(val, GPIO_WAKEUP_ACT2_BITS, GPIO_WAKEUP_ACT2_SHIFFT)
#define GPIO_WAKEUP_ACT2_GET(reg) GET_VAL(reg, GPIO_WAKEUP_ACT2_BITS, GPIO_WAKEUP_ACT2_SHIFFT)

#define GPIO_OUTPUT_CHANGE_EN2_SHIFFT 0
#define GPIO_OUTPUT_CHANGE_EN2_BITS 32
#define GPIO_OUTPUT_CHANGE_EN2_MASK(val) SET_VAL(val, GPIO_OUTPUT_CHANGE_EN2_BITS, GPIO_OUTPUT_CHANGE_EN2_SHIFFT)
#define GPIO_OUTPUT_CHANGE_EN2_GET(reg) GET_VAL(reg, GPIO_OUTPUT_CHANGE_EN2_BITS, GPIO_OUTPUT_CHANGE_EN2_SHIFFT)

#define GPIO_OUTPUT_CHANGE_ACT2_SHIFFT 0
#define GPIO_OUTPUT_CHANGE_ACT2_BITS 32
#define GPIO_OUTPUT_CHANGE_ACT2_MASK(val) SET_VAL(val, GPIO_OUTPUT_CHANGE_ACT2_BITS, GPIO_OUTPUT_CHANGE_ACT2_SHIFFT)
#define GPIO_OUTPUT_CHANGE_ACT2_GET(reg) GET_VAL(reg, GPIO_OUTPUT_CHANGE_ACT2_BITS, GPIO_OUTPUT_CHANGE_ACT2_SHIFFT)

#define GPIO_WAKEUP_EN3_SHIFFT 0
#define GPIO_WAKEUP_EN3_BITS 22
#define GPIO_WAKEUP_EN3_MASK(val) SET_VAL(val, GPIO_WAKEUP_EN3_BITS, GPIO_WAKEUP_EN3_SHIFFT)
#define GPIO_WAKEUP_EN3_GET(reg) GET_VAL(reg, GPIO_WAKEUP_EN3_BITS, GPIO_WAKEUP_EN3_SHIFFT)

#define GPIO_WAKEUP_ACT3_SHIFFT 0
#define GPIO_WAKEUP_ACT3_BITS 22
#define GPIO_WAKEUP_ACT3_MASK(val) SET_VAL(val, GPIO_WAKEUP_ACT3_BITS, GPIO_WAKEUP_ACT3_SHIFFT)
#define GPIO_WAKEUP_ACT3_GET(reg) GET_VAL(reg, GPIO_WAKEUP_ACT3_BITS, GPIO_WAKEUP_ACT3_SHIFFT)


#define GPIO_OUTPUT_CHANGE_EN3_SHIFFT 0
#define GPIO_OUTPUT_CHANGE_EN3_BITS 22
#define GPIO_OUTPUT_CHANGE_EN3_MASK(val) SET_VAL(val, GPIO_OUTPUT_CHANGE_EN_BITS, GPIO_OUTPUT_CHANGE_EN_SHIFFT)
#define GPIO_OUTPUT_CHANGE_EN3_GET(reg) GET_VAL(reg, GPIO_OUTPUT_CHANGE_EN_BITS, GPIO_OUTPUT_CHANGE_EN_SHIFFT)

#define GPIO_OUTPUT_CHANGE_ACT3_SHIFFT 0
#define GPIO_OUTPUT_CHANGE_ACT3_BITS 22
#define GPIO_OUTPUT_CHANGE_ACT3_MASK(val) SET_VAL(val, GPIO_OUTPUT_CHANGE_ACT_BITS, GPIO_OUTPUT_CHANGE_ACT_SHIFFT)
#define GPIO_OUTPUT_CHANGE_ACT3_GET(reg) GET_VAL(reg, GPIO_OUTPUT_CHANGE_ACT_BITS, GPIO_OUTPUT_CHANGE_ACT_SHIFFT)

void rtk_suspend_gpio_output_change_suspend(void);
void rtk_suspend_gpio_output_change_resume(void);
void rtk_gpio_suspend_init(struct device_node *node);


#endif /* RTD16XX_GPIO_SUSPEND_H_ */

