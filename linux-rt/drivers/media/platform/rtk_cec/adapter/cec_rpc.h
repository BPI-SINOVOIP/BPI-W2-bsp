/*
 *  Copyright (C) 2016 Realtek Semiconductor Corporation
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
#ifndef __CEC_RPC_H__
#define __CEC_RPC_H__

#include <soc/realtek/kernel-rpc.h>

#include "uapi/ion.h"
#include "ion/ion.h"
#include "uapi/ion_rtk.h"

typedef enum {
	ENUM_KERNEL_RPC_CREATE_AGENT,
	ENUM_KERNEL_RPC_INIT_RINGBUF,
	ENUM_KERNEL_RPC_PRIVATEINFO,
	ENUM_KERNEL_RPC_RUN,
	ENUM_KERNEL_RPC_PAUSE,
	ENUM_KERNEL_RPC_SWITCH_FOCUS,
	ENUM_KERNEL_RPC_MALLOC_ADDR,
	ENUM_KERNEL_RPC_VOLUME_CONTROL,
	ENUM_KERNEL_RPC_FLUSH,
	ENUM_KERNEL_RPC_CONNECT,
	ENUM_KERNEL_RPC_SETREFCLOCK,
	ENUM_KERNEL_RPC_DAC_I2S_CONFIG,
	ENUM_KERNEL_RPC_DAC_SPDIF_CONFIG,
	ENUM_KERNEL_RPC_HDMI_OUT_EDID,
	ENUM_KERNEL_RPC_HDMI_OUT_EDID2,
	ENUM_KERNEL_RPC_HDMI_SET,
	ENUM_KERNEL_RPC_HDMI_MUTE,
	ENUM_KERNEL_RPC_ASK_DBG_MEM_ADDR,
	ENUM_KERNEL_RPC_DESTROY,
	ENUM_KERNEL_RPC_STOP,
	ENUM_KERNEL_RPC_CHECK_READY,
	ENUM_KERNEL_RPC_GET_MUTE_N_VOLUME,
	ENUM_KERNEL_RPC_EOS,
	ENUM_KERNEL_RPC_ADC0_CONFIG,
	ENUM_KERNEL_RPC_ADC1_CONFIG,
	ENUM_KERNEL_RPC_ADC2_CONFIG,
#if defined(AUDIO_TV_PLATFORM)
	ENUM_KERNEL_RPC_BBADC_CONFIG,
	ENUM_KERNEL_RPC_I2SI_CONFIG,
	ENUM_KERNEL_RPC_SPDIFI_CONFIG,
#endif
	ENUM_KERNEL_RPC_HDMI_OUT_VSDB,
	ENUM_VIDEO_KERNEL_RPC_CONFIG_TV_SYSTEM,
	ENUM_VIDEO_KERNEL_RPC_CONFIG_HDMI_INFO_FRAME,
} ENUM_AUDIO_KERNEL_RPC_CMD;


enum AUDIO_ENUM_PRIVAETINFO {
	ENUM_PRIVATEINFO_AUDIO_FORMAT_PARSER_CAPABILITY,
	ENUM_PRIVATEINFO_AUDIO_DECODER_CAPABILITY,
	ENUM_PRIVATEINFO_AUDIO_CONFIG_CMD_BS_INFO,
	ENUM_PRIVATEINFO_AUDIO_CHECK_LPCM_ENDIANESS,
	ENUM_PRIVATEINFO_AUDIO_CONFIG_CMD_AO_DELAY_INFO,
	ENUM_PRIVATEINFO_AUDIO_AO_CHANNEL_VOLUME_LEVEL,
	ENUM_PRIVATEINFO_AUDIO_GET_FLASH_PIN,
	ENUM_PRIVATEINFO_AUDIO_RELEASE_FLASH_PIN,
	ENUM_PRIVATEINFO_AUDIO_GET_MUTE_N_VOLUME,
	ENUM_PRIVATEINFO_AUDIO_AO_MONITOR_FULLNESS,
	ENUM_PRIVATEINFO_AUDIO_CONTROL_FLASH_VOLUME,
	ENUM_PRIVATEINFO_AUDIO_CONTROL_DAC_SWITCH,
	ENUM_PRIVATEINFO_AUDIO_PREPROCESS_CONFIG,
	ENUM_PRIVATEINFO_AUDIO_CHECK_SECURITY_ID,
	ENUM_PRIVATEINFO_AUDIO_LOW_DELAY_PARAMETERS,
	ENUM_PRIVATEINFO_AUDIO_SET_NETWORK_JITTER,
	ENUM_PRIVATEINFO_AUDIO_GET_QUEUE_DATA_SIZE,
	ENUM_PRIVATEINFO_AUDIO_GET_SHARE_MEMORY_FROM_ALSA,
	ENUM_PRIVATEINFO_AUDIO_AI_CONNECT_ALSA,
	ENUM_PRIVATEINFO_AUDIO_SET_PCM_FORMAT,
	ENUM_PRIVATEINFO_AUDIO_DO_SELF_DESTROY_FLOW,
	ENUM_PRIVATEINFO_AUDIO_GET_SAMPLING_RATE,
	ENUM_PRIVATEINFO_AUDIO_SLAVE_TIMEOUT_THRESHOLD,
	ENUM_PRIVATEINFO_AUDIO_GET_GLOBAL_AO_INSTANCEID,
	ENUM_PRIVATEINFO_AUDIO_SET_CEC_PARAMETERS
};

struct AUDIO_RPC_PRIVATEINFO_PARAMETERS
{
	int instanceID;
	enum    AUDIO_ENUM_PRIVAETINFO type;
	int privateInfo[16];
};

#endif  /* __CEC_RPC_H__ */

